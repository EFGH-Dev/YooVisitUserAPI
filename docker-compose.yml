services:
  yoovisituserapi:
    container_name: yoovisit-user-api
    # Le chemin vers le Dockerfile de l'API Utilisateurs
    build:
      context: ./YooVisitUserAPI # Remplace par le bon chemin si nécessaire
      dockerfile: Dockerfile
    ports:
      # On expose le port 8080 interne sur le port 8180 de notre PC
      - "8180:8080"
    environment:
      # La connection string utilise le nom du service de la BDD, pas localhost !
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8180
      - ConnectionStrings__DefaultConnection=Host=postgres-db;Port=5432;Database=YooVisit_Users;Username=yoovisit;Password=MonMotDePasseSuperSecurise!123
    depends_on:
      - yoovisit-postgres-db # Ne démarre pas tant que la BDD n'est pas prête
    restart: unless-stopped

  yoovisit-postgres-db:
    image: postgres:15-alpine
    container_name: yoovisit-postgres-db # Un nom fixe pour le conteneur
    environment:
      - POSTGRES_USER=yoovisit
      - POSTGRES_PASSWORD=MonMotDePasseSuperSecurise!123
      - POSTGRES_DB=YooVisit_Users
    ports:
      # On expose le port 5432 de la BDD sur le port 5433 de notre PC
      # pour pouvoir s'y connecter avec un outil comme DBeaver si besoin.
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres-data: